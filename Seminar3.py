# Напишите программу, в которой пользователь будет задавать две строки,
# а программа - определять количество вхождений одной строки в другой.


# my_text = 'привет мир привет друзья'
# my_text_1 = 'привет'
# my_list = my_text.split(" ")
# current_e = 0
# for i in my_list:
#     if i == my_text_1:
#         current_e += 1
# print(current_e)


# Создать генерацию целого рандомного числа

# import datetime
# print(datetime.datetime.now().microsecond % 1000)


# Определить, присутствует ли в заданном списке строк, некоторое число


# text_1 = ['1', 'a', 'f', 'h', '5']
# def find_digit(new_text):
#     for i in range(len(new_text)):
#         if new_text[i].isdigit():
#             print(i)

# find_digit(text_1)


# или


# text_1 = ["5", "8", "32", "55", "7", "8"]
# num = 8
# def find_digit(new_text, num):
#     for i in range(len(new_text)):
#         for j in new_text[i]:
#             if j.isdigit():
#                 if int(j) == num:
#                     print(i)
#                     break
# find_digit(text_1, num)


# Определить, позицию второго вхождения строки в списке либо сообщить, что её нет.
# Примеры
# список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# список: [], ищем: "123", ответ: -1


# text_1 = ["qwe", "asd", "zxc", "ertqwe"]
# key_word = "qwe"
# def find_coincidence(new_text, key):
#     count = 0
#     for i in range(len(new_text)):
#         if new_text[i] == key:
#             count += 1
#             if count == 2:
#                 print(i)
#                 break
#     if count < 2:
#         print("-1")

# find_coincidence(text_1, key_word)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Домашняя работа
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка,
# стоящих на нечётной позиции.
# Пример:
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# num = int(input('Введите кол-во чисел в списке '))
# list = []
# sum = 0
# for i in range(num):
#     list_num = int(input(f'Введите число {i+1} '))
#     list.append(list_num)
#     if i % 2 != 0:
#         sum += list[i]
# print(list)
# print(f'Сумма нечетных чисел равна {sum}')


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент,
# второй и предпоследний и т.д.
# Пример:
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]


# import random

# n = int(input('Введите размер списка:'))
# str = []
# sum = 0

# for i in range(n):
#     str.append(random.randint(0,10))
#     if i % 2 != 0:
#         sum = sum + str[i]
# print(str)
# print(f'Сумма нечетных элементов списка = {sum}')


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и
# минимальным значением дробной части элементов.
# Пример:
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# lst = [1.1, 1.2, 3.1, 5, 10.01]
# min = 1
# max = 0
# for i in lst:
#     if (i - int(i))<= min:
#         min = i - int(i)
#     if (i - int(i)) >= max:
#         max = i - int(i)
# sum = (max-min)
# print(sum)  # не получилось оставить два знака после запятой ни через round ни через float постоянно округляет до 0,2


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Пример:
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10

# num = int(input('Введите десятичное число '))
# print(bin(num)) # Python  очень функционален :)


